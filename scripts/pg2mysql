#!/usr/bin/env bash
# deps
# - docker
# - csvkit
# - jq

POSTGRES=postgres
MYSQL=mysql

pgtables(){
# docker exec -u postgres -i acala-subql_postgres_1 env PGOPTIONS=--search_path=subquery_1 psql postgresql://postgres:postgres@localhost/postgres -c "\dt" --csv | csvjson | jq -r .[].Name
  docker-compose exec -T -u postgres -e PGOPTIONS=--search_path=subquery_1 -- postgres psql postgresql://postgres:postgres@$POSTGRES/postgres -c "\dt" --csv | csvjson | jq -r .[].Name
}

mqtables(){
  docker run -e MYSQL_PWD=nftmart -i --rm --net host mysql:5.7 mysql -h127.0.0.1 --port=3306 -uroot nftmart -e 'show tables;'
}

pg(){
# docker exec -u postgres -i acala-subql_postgres_1 env PGOPTIONS=--search_path=subquery_1 psql postgresql://postgres:postgres@localhost/postgres -c "$@"
  docker-compose exec -T -u postgres -e PGOPTIONS=--search_path=subquery_1 -- postgres psql postgresql://postgres:postgres@$POSTGRES/postgres -c "$@"
}

hack(){
  docker-compose exec -T -u mysql -e MYSQL_PWD=nftmart -- mysql mysql -h127.0.0.1 --port=3306 -uroot nftmart <<EOF
SET SESSION SQL_MODE='ALLOW_INVALID_DATES'
EOF
}

mq(){
# docker run -e MYSQL_PWD=nftmart -i --rm --net host mysql:5.7 mysql -h127.0.0.1 --port=3306 -uroot nftmart <<< "$@"
# docker exec -i acala-subql_mysql_1 env MYSQL_PWD=nftmart mysql -h127.0.0.1 --port=3306 -uroot nftmart <<< "$@"
  docker-compose exec -T -u mysql -e MYSQL_PWD=nftmart -- mysql mysql -h127.0.0.1 --port=3306 -uroot nftmart <<< "$@"
}

pq(){
# docker exec -u postgres -i acala-subql_postgres_1 env PGOPTIONS=--search_path=subquery_1 psql postgresql://postgres:postgres@localhost/postgres -A <<< "$@"
  docker-compose exec -T -u postgres -e PGOPTIONS=--search_path=subquery_1 -- postgres psql postgresql://postgres:postgres@$POSTGRES/postgres -c "$@"
}

mq_rows(){
  mq "select count(*) from $1;" | tail -n1
}

pq_rows(){
  pq "select count(*) from $1;" -A | sed -n 2p
}

sql2csv(){
# docker run -i --net=host btwiuse/csvkit sql2csv "$@"
  docker-compose exec -T -- csvkit sql2csv "$@"
}

csvsql(){
  # docker run -i --net=host btwiuse/csvkit csvsql "$@"
  docker-compose exec -T -- csvkit csvsql "$@"
}

sync_once(){
  echo -e "MQ_ROWS\tPQ_ROWS\tDIFF\tBATCH\t%\tTABLE"
  for table in accounts blocks calls events extrinsics; do
    MR="$(mq_rows $table)"
    PR="$(pq_rows $table)"
    DIFF="$((PR-MR))"
    BATCH_LIMIT=4096
    BATCH=$((DIFF>BATCH_LIMIT ? BATCH_LIMIT : DIFF))
    PROGRESS="$(bc <<< "scale=2; $MR / $PR * 100")"

    echo -e "${MR}\t${PR}\t${DIFF}\t${BATCH}\t${PROGRESS}\t${table}"

    [[ $DIFF == 0 ]] && continue

    # pg "select * from $table limit $BATCH offset $MR;" -A -F $'\t' -P "footer=off" | sed 1d | wc -l
    # pq "SELECT * FROM $table ORDER BY created_at ASC LIMIT $BATCH OFFSET $MR;" -A -F $'\t' -P "footer=off" |\
    sql2csv --db postgresql://postgres:postgres@$POSTGRES:5432/postgres --query "SELECT * FROM subquery_1.$table ORDER BY created_at ASC LIMIT $BATCH OFFSET $MR;" |\
    csvsql -t --db mysql+mysqlconnector://root:nftmart@$MYSQL:3306/nftmart --insert --tables $table --no-create -

  done
}

ensure_db(){
  until docker-compose exec -T -u postgres -e PGOPTIONS=--search_path=subquery_1 -- postgres psql postgresql://postgres:postgres@$POSTGRES/postgres -c "\dt" --csv | csvjson | jq -r .[].Name >/dev/null; do
    echo "waiting for postgres to be ready"
    sleep 1
  done
  until docker-compose exec -T -u mysql -e MYSQL_PWD=nftmart -- mysql mysql -h127.0.0.1 --port=3306 -uroot nftmart -e 'show databases;' > /dev/null; do
    echo "waiting for mysql to be ready"
    sleep 1
  done
}

main(){
# hack
  ensure_db
  while :; do
    sync_once
    echo
  done
}

main "$@"
